# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
PortSystem          	1.0
PortGroup               config_package 1.0
PortGroup               python 1.0

name                	macathena-login-config
version             	1.0
categories          	config
maintainers         	mit.edu:sipb-macathena
platforms           	darwin
description         	Configure network login for macathena
long_description        This package sets up MIT's LDAP server to be used for network login, so that you can log into the server with your Athena account.
destroot.violate_mtree  yes
set config_install_args --install

depends_run		port:macathena-kerberos-config \
    port:py${python.version}-pyobjc

# This variant doesn't work! Don't use it!
variant network_home_dir description {Use the Mac AFS home directory instead of creating a local home directory} {
    depends_run      port:openafs-client
    set config_install_args "${config_install_args} --network-home-dir"
}
variant bash description {Use bash instead of zsh} {
    set config_install_args "${config_install_args} --bash"
}

fetch {}
checksum {}
extract {
    file copy ${filespath}/login_config_install_and_uninstall.py ${workpath}/login_config_install_and_uninstall.py
}
patch {
    reinplace "s|FILESPATH|${filespath}|" ${workpath}/login_config_install_and_uninstall.py 
}
post-activate {
	system "${python.bin} ${workpath}/login_config_install_and_uninstall.py ${config_install_args}"
    # the following two lines are from https://wikispaces.psu.edu/display/clcmaclinuxwikipublic/macOS+Authentication+Configuration
    system "/usr/bin/defaults write /Library/Preferences/com.apple.loginwindow SHOWFULLNAME -bool \"TRUE\""
    system "/usr/bin/perl -pi\".orig\" -e 's/auth       optional       pam_krb5.so use_first_pass use_kcminit/auth       optional       pam_krb5.so use_first_pass use_kcminit default_principal
auth       sufficient     pam_krb5.so use_first_pass default_principal/g' \"/etc/pam.d/authorization\""
}
config.install ${workpath}/login_config_install_and_uninstall.py bin/login_config_install_and_uninstall.py
pre-deactivate {
    system "${python.bin} ${prefix}/bin/login_config_install_and_uninstall.py --uninstall"
    system "/usr/bin/defaults write /Library/Preferences/com.apple.loginwindow SHOWFULLNAME -bool \"FALSE\""
    file copy -force /etc/pam.d/authorization.orig /etc/pam.d/authorization
}
